import{formatMoney}from"utils";class VariantSelects extends HTMLElement{connectedCallback(){this.productAvailable=this.getVariantData().some((t=>t.available)),this.uniqueId=this.dataset.card||this.dataset.section,this.addEventListener("change",this.onVariantChange)}disconnectedCallback(){this.removeEventListener("change",this.onVariantChange)}onVariantChange(){this.updateOptions(),this.updateMasterId(),this.updatePickupAvailability(),this.removeErrorMessage(),this.currentVariant?(this.updateURL(),this.updateVariantInput(),this.renderProductInfo()):(this.toggleAddButton(!0,""),this.setUnavailable()),this.dispatchEvent(new CustomEvent("on:variant:change",{detail:{variant:this.currentVariant}}))}updateOptions(){this.options=Array.from(this.querySelectorAll("select"),(t=>t.value))}updateMasterId(){this.currentVariant=this.getVariantData().find((t=>!t.options.map(((t,e)=>this.options[e]===t)).includes(!1)))}updateURL(){this.currentVariant&&"false"!==this.dataset.updateUrl&&window.history.replaceState({},"",`${this.dataset.url}?variant=${this.currentVariant.id}`)}updateVariantInput(){document.querySelectorAll(`#product-form-${this.uniqueId}, #product-form-installment-${this.uniqueId}`).forEach((t=>{const e=t.querySelector('input[name="id"]');e.value=this.currentVariant.id,e.dispatchEvent(new Event("change",{bubbles:!0}))}));const t=this.closest("product-single");t&&(t.variant=this.currentVariant)}updatePickupAvailability(){const t=document.querySelector("pickup-availability");t&&t.fetchAvailability(this.currentVariant.id)}removeErrorMessage(){const t=this.closest("section");t&&t.querySelector(".qty-error")?.remove()}renderProductInfo(){const t=document.getElementById(`price-${this.uniqueId}`);if(t){const e=`\n        <span class="u-hidden-visually">${window.theme.localize("REGULAR_PRICE")}</span>\n          <span class="price__number ${this.currentVariant.compare_at_price>this.currentVariant.price?"price__number--sale":""}">\n          <span class="money">${formatMoney(this.currentVariant.price,window.theme.money_product_price_format)}\n          </span>\n        </span>\n        ${this.currentVariant.compare_at_price>this.currentVariant.price?`\n          <span class="u-hidden-visually">${window.theme.localize("SALE_PRICE")}</span>\n          <s class="price__compare">\n            <span class="money">${formatMoney(this.currentVariant.compare_at_price,window.theme.money_format)}\n            </span>\n          </s>\n        `:""}\n      `;t.innerHTML=e}const e=document.getElementById(`unit-price-${this.uniqueId}`);if(e){const t=this.currentVariant.unit_price?`\n        <span class="u-hidden-visually">${window.theme.localize("UNIT_PRICE_LABEL")}</span>\n        <span class="money">${formatMoney(this.currentVariant.unit_price,window.theme.money_format)}</span>\n        <span aria-hidden="true">/</span>\n        <span class="u-hidden-visually">${window.theme.localize("UNIT_PRICE_SEPARATOR")}&nbsp;</span>\n        <span>\n          ${this.productAvailable&&this.currentVariant.unit_price_measurement?`\n            ${1!==this.currentVariant.unit_price_measurement.reference_value?this.currentVariant.unit_price_measurement.reference_value:""}\n            ${this.currentVariant.unit_price_measurement.reference_unit}\n          `:""}\n        </span>\n      `:"";e.innerHTML=t}const n=document.getElementById(`label-${this.uniqueId}`);if(n)if(this.currentVariant.compare_at_price>this.currentVariant.price){let t;switch(n.dataset.type){case"currency":{const e=formatMoney(Math.round(this.currentVariant.compare_at_price-this.currentVariant.price),window.theme.money_format);t=window.theme.localize("DISCOUNT_CURRENCY",e);break}case"percentage":{const e=Math.round(100*(this.currentVariant.compare_at_price-this.currentVariant.price)/this.currentVariant.compare_at_price);t=window.theme.localize("DISCOUNT_PERCENTAGE",e);break}default:t=window.theme.localize("DISCOUNT_TEXT")}const e=`\n          <div class="label">\n            <div class="label__text">${t}</div>\n          </div>\n        `;n.innerHTML=e}else n.innerHTML="";const a=document.getElementById(`inventory-notice-${this.uniqueId}`);if(a){const t=a.querySelector(".stock-note"),e=a.querySelector(".stock-note__text"),n=a.dataset.showQty,i=Number(a.dataset.inventoryLimit),s=Number(document.getElementById(`quantity-${this.uniqueId}-${this.currentVariant.id}`).dataset.qty),r="stock-note--sold",c="stock-note--in-stock",o="stock-note--low";this.currentVariant.available?"shopify"===this.currentVariant.inventory_management&&"true"===n?(t.classList.remove(r,o),t.classList.add(c),s<=i?(t.classList.add(o),e.innerHTML=window.theme.localize("QTY_NOTICE_NUMBER_LOW_STOCK_HTML",s)):e.innerHTML=window.theme.localize("QTY_NOTICE_NUMBER_IN_STOCK_HTML",s)):"shopify"===this.currentVariant.inventory_management&&"false"===n?(t.classList.remove(r,o),t.classList.add(c),s<=i?(t.classList.add(o),e.innerHTML=`${window.theme.localize("QTY_NOTICE_LOW_STOCK")}`):e.innerHTML=`${window.theme.localize("QTY_NOTICE_IN_STOCK")}`):(t.classList.remove(r,o),t.classList.add(c),e.innerHTML=`${window.theme.localize("QTY_NOTICE_IN_STOCK")}`):(t.classList.remove(c,o),t.classList.add(r),e.innerHTML=`${window.theme.localize("QTY_NOTICE_SOLD_OUT")}`)}const i=document.getElementById(`sku-${this.uniqueId}`);if(i){const t=this.currentVariant.sku?`\n        <div class="product-form__swatch__title u-small">${i.dataset.skuLabel?`${i.dataset.skuLabel}&nbsp;`:""}<span class="product-form__swatch__sub-title">${this.currentVariant.sku}</span></div>\n      `:"";i.innerHTML=t}this.toggleAddButton(!this.currentVariant.available,window.theme.localize("SOLD_OUT"))}toggleAddButton(t=!0,e=""){const n=document.getElementById(`product-form-${this.uniqueId}`);if(!n)return;const a=n.querySelector(".js-product-buttons"),i=n.querySelector('[name="add"]'),s=n.querySelector('[name="add"] staged-action-text');i&&(t?(i.setAttribute("disabled","disabled"),e&&(s.textContent=e),a.classList.add("is-disabled")):(i.removeAttribute("disabled"),s.textContent=window.theme.localize("ADD_TO_CART"),a.classList.remove("is-disabled")))}setUnavailable(){const t=document.getElementById(`product-form-${this.uniqueId}`),e=t.querySelector('[name="add"]'),n=t.querySelector('[name="add"] > span'),a=document.getElementById(`price-${this.uniqueId}`);e&&(n.textContent=window.theme.localize("UNAVAILABLE"),a&&a.classList.add("visibility-hidden"))}getVariantData(){return this.variantData=this.variantData||JSON.parse(this.querySelector('[type="application/json"]').textContent),this.variantData}}customElements.define("variant-selects",VariantSelects);class VariantRadios extends VariantSelects{updateOptions(){const t=Array.from(this.querySelectorAll("fieldset"));this.options=t.map((t=>Array.from(t.querySelectorAll("input")).find((t=>t.checked)).value))}}customElements.define("variant-radios",VariantRadios);class VariantSwatches extends HTMLElement{connectedCallback(){this.currentSelection=this.querySelector("input:checked").value;const t=document.getElementById(this.dataset.formId);t?t.addEventListener("change",(()=>{this.updateLabel()})):this.addEventListener("change",(()=>{this.updateLabel()}))}updateLabel(){const t=this.querySelector("input:checked").value;if(t!==this.currentSelection){this.querySelector(".js-option-title").innerHTML=t,this.currentSelection=t}}}customElements.define("variant-swatches",VariantSwatches);class VariantMixedInputs extends VariantSelects{updateOptions(){this.options=Array.from(this.querySelectorAll("input:checked, select"),(t=>t.value))}}customElements.define("variant-mixed-inputs",VariantMixedInputs);
//# sourceMappingURL=variant-select-components.js.map
